기타 그래프 이론

서로소 집합
- 서로소 집합이란? 공통 원소가 없는 두 집합
ex) {1, 2}와 {3, 4}는 서로소 관계이다.
ex) {1, 2}와 {3, 4}는 서로소 관계가 아니다.


서로소 집합 자료구조
- 서로소 부분 집합들로 나누어진 원소들의 데이터를 처리하기 위한 자료구조

- 서로소 집합 자료구조는 두 종류의 연산을 지원
	- 합집합(Union) : 두 개의 원소가 포함된 집합을 하나의 집합으로 합치는 연산
	- 찾기(Find) : 특정한 원소가 속한 집합이 어떤 집합인지 알려주는 연산

- 서로소 집합 자료구조는 합치기 찾기(Union Find)자료구조라고 불리기도 함


서로소 집합 자료구조 동작 과정
1. 합집합(Union) 연산을 확인하여, 서로 연결된 두 노드 A,B를 확인
	1) A와 B의 루트 노드 A', B'를 각각 확인
	2) A'를 B'의 부모 노드로 설정
2. 모든 합집합(Union)연산을 처리할 때까지 1번의 과정 반복


서로소 집합 자료구조의 연결성
- 기본적인 형태의 서로소 집합 자료구조에서는 루트 노드에 즉시 접근할 수 없다.
	- 루트 노드를 찾기 위해 부모 테이블을 계속해서 확인하며 거슬러 올라가야 함


기본적인 구현 방법의 문제점
- 합집합(Union) 연산이 편향되게 이루어지는 경우 찾기(Find)함수가 비효율적으로 동작

- 최악의 경우에는 찾기(Find)함수가 모든 노드를 다 확인하게 되어 시간 복잡도가 O(V)
ex) {1, 2, 3, 4, 5}의 총 5개 원소 존재
수행연산 : Union(4, 5), Union(3, 4), Union(2, 3), Union(2, 1)

-> 개선

서로소 집합 자료구조 : 경로 압축
- 찾기(Find) 함수를 최적화하기 위한 방법으로 경로 압축(Path Compression)을 이용
	- 찾기(Find) 함수를 재귀적으로 호출한 뒤에 부모 테이블 값을 바로 갱신

- 경로 압축 기법을 적용하면 각 노드에 대하여 찾기(FIind)함수를 호출한 이후에 해당 노드의 루트 노드가 바로 부모 노드가 됨

- 기본적인 방법에 비해 시간 복잡도 개선


서로소 집합을 활용한 사이클 판별
- 서로소 집합은 무방향 그래프 내에서의 사이클을 판별할 때 사용할 수 있음
	- 참고로 방향 그래프에서의 사이클 여부는 DFS를 이용하여 판별할 수 있음(다루지는 않을 것)

- 사이클 판별 알고리즘
1. 각 간선을 하나씩 확인하며, 두 노드의 루트 노드를 확인
	1) 루트 노드가 서로 다르다면 두 노드에 대하여 합집합(Union)연산 수행
	2) 루트 노드가 서로 같다면 사이클(Cycle)이 발생한 것

2. 그래프에 포함되어 있는 모든 간선에 대하여 1번 과정을 반복