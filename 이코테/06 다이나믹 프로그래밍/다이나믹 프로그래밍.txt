다이나믹 프로그래밍은 메모리를 적절히 사용하여 수행 시간 효율성을 비약적으로 향상시키는 방법이다.

이미 계산된 결과(작은 문제)는 별도의 메모리 영역에 저장하여 다시 계산하지 않도록 한다.

다이나믹 프로그래밍의 구현은 일반적으로 두 가지 방식(탑다운과 보텀업)으로 구성된다.

다이나믹 프로그래밍은 동적 계획법이라고도 부른다.

일반적으로 프로그래밍 분야에서 동적(Dynamic)이란?
- 자료구조에서 동적 할당(Dynamic Allocation)은 '프로그램이 실행되는 도중에 실행에 필요한 메모리를 할당하는 기법'을 의미한다.
- 반면 알고리즘에서 다이나믹 프로그래밍에서 '다이나믹'은 별다른 의미 없이 사용된 단어다.

다이나믹 프로그래밍은 문제가 다음 조건을 만족할 때 사용가능하다.
1. 최적 부분 구조(Optimal Substructure)
- 큰 문제를 작은 문제로 나눌 수 있으며 작은 문제의 답을 모아서 큰 문제를 해결할 수 있어야 한다.
2. 중복되는 부분 문제(Overlapping Subproblem)
- 동일한 작은 문제를 반복적으로 해결해야 한다. 

ex) 피보나치 수열
-> 단순 재귀 함수로 피보나치 수열을 해결하면 지수 시간 복잡도를 갖게 된다.
함수가 여러 번 호출됨(중복되는 문제)
-> 수행시간 비효율
-> 다이나믹 프로그래밍을 통해서 시간 복잡도 문제를 해결해야 한다.